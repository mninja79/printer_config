[gcode_macro _HOME_X]
gcode:
    {% set HOME_CUR = 0.800 %}
    #{% set driver_config = printer.configfile.settings['tmc2209 stepper_x'] %}
    {% set driver_config = printer.configfile.settings['tmc5160 stepper_x'] %}
    {% set RUN_CUR = driver_config.run_current %}
    {% set HOLD_CUR = driver_config.hold_current %}
    # Set current for sensorless homing
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CUR} HOLDCURRENT={HOME_CUR}
    # Pause to ensure driver stall flag is clear
    G4 P2000
    # Home
    G28 X0
    # Move away
    G90
    G1 X10 F1200
    # Set current during print
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CUR} HOLDCURRENT={HOLD_CUR}

[gcode_macro _HOME_Y]
gcode:
    {% set HOME_CUR = 0.800 %}
    #{% set driver_config = printer.configfile.settings['tmc2209 stepper_y'] %}
    {% set driver_config = printer.configfile.settings['tmc5160 stepper_y'] %}
    {% set RUN_CUR = driver_config.run_current %}
    {% set HOLD_CUR = driver_config.hold_current %}
    # Set current for sensorless homing
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CUR} HOLDCURRENT={HOME_CUR}
    # Pause to ensure driver stall flag is clear
    G4 P2000
    # Home
    G28 Y300
    # Move away
    G90
    G1 y280 F1200
    # Set current during print
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CUR} HOLDCURRENT={HOLD_CUR}


[gcode_macro POWER_OFF_PRINTER]
gcode:
  {action_call_remote_method("set_device_power",
                             device="[power PSU]",
                             state="off")}

[delayed_gcode delayed_printer_off]
initial_duration: 0
gcode:
  {% if printer.idle_timeout.state == "Idle" %}
    POWER_OFF_PRINTER
  {% endif %}

[delayed_gcode delayed_printer_pause_timeout]
initial_duration: 0
gcode:
   {% if printer.pause_resume.is_paused %}
      M84
      TURN_OFF_HEATERS
    {% endif %}


[gcode_macro preheat11]
gcode:
    G28
    G0 X0 Y299 Z2 F4000
    M140 S65 # set bed temp
    M104 S120 # set bed temp
    #G1 E9.3000 F1033

[gcode_macro G29]
gcode:
      G1 Z10 F400
      BED_MESH_CLEAR
      BED_MESH_CALIBRATE


[gcode_macro SHAPER_CALIBRATE]
rename_existing: BASE_SHAPER_CALIBRATE
gcode:
      G28
      BASE_SHAPER_CALIBRATE

[gcode_macro Z_ENDSTOP_CALIBRATE]
rename_existing: BASE_Z_ENDSTOP_CALIBRATE
gcode:
      G28
      G1 X150 Y150 Z6 F3000
      BASE_Z_ENDSTOP_CALIBRATE
      
[gcode_macro BED_SCREWS_ADJUST]
rename_existing: BASE_BED_SCREWS_ADJUST
gcode:
      G28
      BASE_BED_SCREWS_ADJUST

[gcode_macro BED_MESH_CALIBRATE_MINE]
gcode:
      RESET_OPTIONS
      G28
      G1 X150 Y150 Z6 F12000
      M140 S85 # set bed temp
      M190 S85 # wait bed temp
      G4 P45000
      G29
      
[gcode_macro PID_Calibrate_extruder]
gcode:
      PID_CALIBRATE HEATER=extruder TARGET=220

[gcode_macro PID_Calibrate_bed]
gcode:
      PID_CALIBRATE HEATER=heater_bed TARGET=100

[gcode_macro T0]
gcode:
      ACTIVATE_EXTRUDER EXTRUDER=extruder
      SAVE_VARIABLE VARIABLE=currentextruder VALUE='"extruder"'

[gcode_macro T1]
gcode:
      ACTIVATE_EXTRUDER EXTRUDER=extruder1
      SAVE_VARIABLE VARIABLE=currentextruder VALUE='"extruder1"'
   
# [gcode_macro T0]
# gcode:
#     # Deactivate stepper in my_extruder_stepper
#     #SYNC_STEPPER_TO_EXTRUDER STEPPER=belted_extruder EXTRUDER=
#     SYNC_EXTRUDER_MOTION EXTRUDER=bmg_extruder MOTION_QUEUE=
#     # Activate stepper in extruder
#     #SYNC_STEPPER_TO_EXTRUDER STEPPER=extruder EXTRUDER=extruder
#     SYNC_EXTRUDER_MOTION EXTRUDER=extruder MOTION_QUEUE=extruder
# [gcode_macro T1]
# gcode:
#     # Deactivate stepper in extruder
#     #SYNC_STEPPER_TO_EXTRUDER STEPPER=extruder EXTRUDER=
#     SYNC_EXTRUDER_MOTION EXTRUDER=extruder MOTION_QUEUE=
#     # Activate stepper in my_extruder_stepper
#     #SYNC_STEPPER_TO_EXTRUDER STEPPER=belted_extruder EXTRUDER=extruder
#     SYNC_EXTRUDER_MOTION EXTRUDER=bmg_extruder MOTION_QUEUE=extruder

[gcode_macro ENDSTOPPHASECALIBRATE]
gcode:
      G28
      ENDSTOP_PHASE_CALIBRATE
      G1 X150 Y150 Z10 F7000
      G28
      ENDSTOP_PHASE_CALIBRATE
      G1 X280 Y150 Z15 F7000
      G28
      ENDSTOP_PHASE_CALIBRATE
      G1 X150 Y50 Z5 F7000
      G28
      ENDSTOP_PHASE_CALIBRATE

[gcode_macro SEARCH_VARS]
gcode:
    {% set search = params.S|lower %}
    {% set ns = namespace() %}
    {% for item in printer  %}
        {% if ' ' in item %}
            {% set ns.path = ['printer', "['%s']" % (item), ''] %}
        {% else %}
            {% set ns.path = ['printer.', item, ''] %}   
        {% endif %} 

        {% if search in ns.path|lower %}
            { action_respond_info(ns.path|join) }
        {% endif %} 

        {% if printer[item].items() %}
            {% for childkey, child in printer[item].items() recursive %}
                {% set ns.path = ns.path[:loop.depth|int + 1] %}

                {% if ' ' in childkey %}
                    {% set null = ns.path.append("['%s']" % (childkey)) %}
                {% else %}
                    {% set null = ns.path.append(".%s" % (childkey)) %}
                {% endif %} 

                {% if child is mapping  %}
                    { loop(child.items()) }
                {% else %}
                    {% if search in ns.path|lower %}
                        { action_respond_info("%s : %s" % (ns.path|join, child)) }   
                    {% endif %} 
                {% endif %} 
                
            {% endfor %}
        {% endif %} 
    {% endfor %}